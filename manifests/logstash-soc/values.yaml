logstash-syslog:
  enabled: true

  replicas: 1
  fullnameOverride: logstash-syslog #From Syslog to Kafka
  image: gcr.io/its-artifact-commons/logstash-loki #"grafana/logstash-output-loki" 
  imageTag: develop-2ad49d4 #v1.1.1

  service:
    type: LoadBalancer
    loadBalancerIP: 34.124.235.129 #gke-syslog-svc-1
    ports:
    - name: syslog-udp
      port: 5140 #443
      targetPort: 5140
      protocol: UDP

  extraEnvs:
    - name: DUMMY_FOR_RESTART #If need to restart pod manually then change this
      value: "0001"
  
    - name: LS_JAVA_OPTS
      value: "-Xmx256m -Xms256m"

    - name: POD_UID
      valueFrom:
        fieldRef:
          fieldPath: metadata.uid

    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name

    - name: MISP_API_KEY
      valueFrom:
        secretKeyRef:
          name: misp-secret
          key: misp-api-token

  logstashConfig:
    logstash.yml: |
      http.host: "0.0.0.0"
      pipeline.ecs_compatibility: "disabled"

  extraVolumeMounts:
    - name: scripts
      mountPath: /scripts/
      readOnly: true
    - name: secrets
      mountPath: /secrets/
      readOnly: true

  extraVolumes:
    - name: scripts
      configMap:
        name: ruby-filter-cm
    - name: secrets
      secret:
        secretName: gcp-sa

  logstashPipeline:
    logstash.conf: |
      # echo "message" | nc -q0 syslog.devops.napbiotec.io 5140
      # logger -P 5140 -d -n syslog.devops.napbiotec.io "hello-abc,world this is seub"

      input {
        syslog {
          port => 5140
        }
      }

      filter {
        ruby {
          path => "/scripts/filter.rb"
          script_params => {}
        }

        clone {
          add_field => { "to_es" => "true" }
          clones => ["es"]
        }

        if [to_es] == "true" {
          mutate {
            remove_field => [ "message" ]
          }          
        }
      }

      output {
        #stdout { codec => rubydebug  }

        if [to_es] == "true" {
          stdout { codec => ndjson  }
        }
        else {
          loki {
            message_field => "message"
            include_fields => [
              "type", 
              "category", 
              "alert_misp", 
              "alert_misp_domain_domain", 
              "alert_misp_domain_domainip", 
              "alert_misp_dstip_domainip", 
              "alert_misp_dstip_ipdst",
              "debug_field1", 
              "dst_net", 
              "dst_port", 
              "mac", 
              "misp_alert_category",
              "possible_user", 
              "src_ip", 
              "src_net"
            ]
            url => "http://loki-soc-gateway.loki-soc.svc.cluster.local/loki/api/v1/push"
          }
        }
      }
