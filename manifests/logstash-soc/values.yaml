####### HTTP ############
logstash-http:
  enabled: true
  replicas: 1
  antiAffinity: soft
  fullnameOverride: logstash-http 
  image: gcr.io/its-artifact-commons/logstash-loki
  imageTag: develop-2ad49d4

  extraEnvs:
    - name: DUMMY_FOR_RESTART #If need to restart pod manually then change this
      value: "000"

    - name: LS_JAVA_OPTS
      value: "-Xmx512m -Xms512m"

    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name

  service:
    ports:
      - name: http-input
        port: 8080
        targetPort: 8080
        protocol: TCP

  logstashConfig:
    logstash.yml: |
      http.host: "0.0.0.0"
      pipeline.ecs_compatibility: "disabled"

  extraVolumeMounts:
    - name: scripts
      mountPath: /scripts/
      readOnly: true
    - name: configs
      mountPath: /configs/
      readOnly: true

  extraVolumes:
    - name: scripts
      configMap:
        name: ruby-filter-cm
    - name: configs
      configMap:
        name: ruby-config-cm

  logstashPipeline:
    logstash.conf: |
      input {
        http {
          id => "http_input"
          codec => "json_lines"
          port => "8080"
        }
      }

      filter {
        ruby {
          path => "/scripts/http.rb"
          script_params => {}
        }
      }

      output {
        stdout { codec => json_lines }
      }

####### SYSLOG ############
logstash-syslog:
  enabled: true

  replicas: 2
  fullnameOverride: logstash-syslog #From Syslog to Kafka
  image: gcr.io/its-artifact-commons/logstash-loki #"grafana/logstash-output-loki" 
  imageTag: develop-2ad49d4 #v1.1.1

  service:
    type: LoadBalancer
    loadBalancerIP: 34.124.235.129 #gke-syslog-svc-1
    ports:
    - name: syslog-udp
      port: 5140 #443
      targetPort: 5140
      protocol: UDP

  extraEnvs:
    - name: DUMMY_FOR_RESTART #If need to restart pod manually then change this
      value: "017"

    - name: LS_JAVA_OPTS
      value: "-Xmx256m -Xms256m"

    - name: POD_UID
      valueFrom:
        fieldRef:
          fieldPath: metadata.uid

    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name

    - name: MISP_API_KEY
      valueFrom:
        secretKeyRef:
          name: misp-secret
          key: misp-api-token

    - name: ES_USER
      valueFrom:
        secretKeyRef:
          name: es-secret
          key: ES_USER

    - name: ES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: es-secret
          key: ES_PASSWORD

  logstashConfig:
    logstash.yml: |
      http.host: "0.0.0.0"
      pipeline.ecs_compatibility: "disabled"

  extraVolumeMounts:
    - name: scripts
      mountPath: /scripts/
      readOnly: true
    - name: secrets
      mountPath: /secrets/
      readOnly: true
    - name: configs
      mountPath: /configs/
      readOnly: true

  extraVolumes:
    - name: scripts
      configMap:
        name: ruby-filter-cm
    - name: secrets
      secret:
        secretName: gcp-sa
    - name: configs
      configMap:
        name: ruby-config-cm

  logstashPipeline:
    logstash.conf: |
      # echo "message" | nc -q0 syslog.devops.napbiotec.io 5140
      # logger -P 5140 -d -n syslog.devops.napbiotec.io "hello-abc,world this is seub"

      input {
        syslog {
          port => 5140
        }
      }

      filter {
        ruby {
          path => "/scripts/filter.rb"
          script_params => {}
        }

        clone {
          # Create field name 'type' = es
          clones => ["es"]
        }

        if [type] == "es" {
          prune {
            interpolate => true
            whitelist_names => [ "type", "metrics", "@timestamp" ]
          }          
        }
      }

      output {
        #stdout { codec => rubydebug  }

        if [type] == "syslog" {
          loki {
            message_field => "message"
            include_fields => [
              "type", 
              "category",
              "evt_category", 
              "alert_misp", 
              "alert_misp_domain_domain", 
              "alert_misp_domain_domainip", 
              "alert_misp_dstip_domainip", 
              "alert_misp_dstip_ipdst",
              "debug_field1", 
              "dst_net", 
              "dst_port", 
              "dst_ip_alert", 
              "mac", 
              "misp_alert_category",
              "possible_user", 
              "src_ip", 
              "src_net"
            ]
            url => "http://loki-soc-gateway.loki-soc.svc.cluster.local/loki/api/v1/push"
          }
        } 

        if [type] == "es" {
          elasticsearch {
            hosts => [ "https://es-soc-es-http.es-soc.svc.cluster.local:9200" ]
            ssl_certificate_verification => false
            user => "${ES_USER}"
            password => "${ES_PASSWORD}"
            action => "create"

            ecs_compatibility => "v8"
            http_compression => "true"

            index => "syslog-events-%{[metrics][evt_ts_yyyy]}%{[metrics][evt_ts_mm]}%{[metrics][evt_ts_dd]}"
            template_name => "syslog-events"
            template_overwrite => "true"
          }
        }
      }
