logstash-syslog:
  enabled: true

  replicas: 1
  fullnameOverride: logstash-syslog #From Syslog to Kafka
  image: gcr.io/its-artifact-commons/logstash-loki #"grafana/logstash-output-loki" 
  imageTag: develop-c962a1d #2.5.0-amd64

  service:
    type: LoadBalancer
    loadBalancerIP: 34.124.235.129 #gke-syslog-svc-1
    ports:
    - name: syslog-udp
      port: 5140 #443
      targetPort: 5140
      protocol: UDP

  extraEnvs:
    - name: DUMMY_FOR_RESTART #If need to restart pod manually then change this
      value: "0008"
  
    - name: LS_JAVA_OPTS
      value: "-Xmx256m -Xms256m"

  logstashConfig:
    logstash.yml: |
      http.host: "0.0.0.0"
      pipeline.ecs_compatibility: "disabled"

  extraVolumeMounts:
    - name: scripts
      mountPath: /scripts/
      readOnly: true

  extraVolumes:
    - name: scripts
      configMap:
        name: ruby-filter-cm

  logstashPipeline:
    logstash.conf: |
      # echo "message" | nc -q0 syslog.devops.napbiotec.io 5140
      # logger -P 5140 -d -n syslog.devops.napbiotec.io "hello-abc,world this is seub"

      input {
        syslog {
          port => 5140
        }
      }

      filter {
        ruby {
          path => "/scripts/filter.rb"
          script_params => {}
        }

        mutate {
          # Remove temp fields, not to be shown in Loki
          # Remove to reduce label values
          remove_field => [ "misp_domain", "misp_dst_ip", "domain", "dst_ip" ]
        }
      }

      output {
        #stdout { codec => rubydebug  }

        loki {
          url => "http://loki-soc-gateway.loki-soc.svc.cluster.local/loki/api/v1/push"
        }
      }   
