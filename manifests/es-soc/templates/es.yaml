---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: es-soc
spec:
  version: 8.3.3
  nodeSets:
  - name: masters
    count: 1
    podTemplate:
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
    config:
      node.store.allow_mmap: true
      node.roles: ["master"]
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard
  - name: data
    count: 1
    podTemplate:
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
    config:
      node.store.allow_mmap: true
      node.roles: ["data"]
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 300Gi
        storageClassName: standard
  auth:
    fileRealm:
    - secretName: es-soc-basic-authen
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: es-soc
spec:
  version: 8.3.3
  count: 1
  elasticsearchRef:
    name: es-soc
  config:
    monitoring.ui.ccs.enabled: false
